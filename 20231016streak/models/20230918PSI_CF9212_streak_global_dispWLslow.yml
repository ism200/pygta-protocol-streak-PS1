default_megacomplex: decay
dataset_groups:
  streak:
    residual_function: non_negative_least_squares
    link_clp: True

dataset:
  CF9212WLtr1:
    group: streak
    megacomplex: [CF9212complexWL,freeChla]
    megacomplex_scale: [CF9212scalem.1,CF9212scalem.WLtr1a]
    initial_concentration: CF9212inputWLtr1
    irf: CF9212irfWLtr1
    scale: CF9212scale.WLtr1
  CF9212WLtr2:
    group: streak
    megacomplex: [CF9212complexWL,freeChla]
    megacomplex_scale: [CF9212scalem.1,CF9212scalem.WLtr2a]
    initial_concentration: CF9212inputWLtr2
    irf: CF9212irfWLtr2
    scale: CF9212scale.WLtr2
  CF9212WLtr4:
    group: streak
    megacomplex: [CF9212complexWL,freeChla]
    megacomplex_scale: [CF9212scalem.1,CF9212scalem.WLtr4a]
    initial_concentration: CF9212inputWLtr4
    irf: CF9212irfWLtr4
    scale: CF9212scale.WLtr4

megacomplex:
  freeChla:
    k_matrix: [CF9212kmChla]
  CF9212complexWL:
    k_matrix: [CF9212WL]

# note that earlier definition will override later definition
k_matrix:
  CF9212WL:
    matrix:
      (br2, br1): brates.k21
      (br3, br2): brates.k32
      (br3, br3): brates.k33
      (br1, slowChla): CF9212rates.slow
      (slowChla, slowChla): CF9212rates.kF
  CF9212kmChla:
    matrix:
      (freeChla, freeChla): CF9212rates.kF

initial_concentration:
  CF9212inputWLtr1:
    compartments: [br1,br2,br3,freeChla,slowChla]
    parameters: [input.1, input.0, input.0, input.1,input.slowtr1]
    exclude_from_normalize: [freeChla]
  CF9212inputWLtr2:
    compartments: [br1,br2,br3,freeChla,slowChla]
    parameters: [input.1, input.0, input.0, input.1,input.slowtr2]
    exclude_from_normalize: [freeChla]
  CF9212inputWLtr4:
    compartments: [br1,br2,br3,freeChla,slowChla]
    parameters: [input.1, input.0, input.0, input.1,input.slowtr4]
    exclude_from_normalize: [freeChla]

clp_penalties:
  - type: equal_area
    source: freeChla
    source_intervals: [[0, 1000]]
    target: br1
    target_intervals: [[0, 1000]]
    parameter: area.1
    weight: 0.62e-2
  - type: equal_area
    source: slowChla
    source_intervals: [[0, 1000]]
    target: br1
    target_intervals: [[0, 1000]]
    parameter: area.1
    weight: 0.62e-2
# it is implicitly normalized, i.e. divided by sum of irfscale parameters
irf:
  CF9212irfWLtr1:
    type: spectral-multi-gaussian
    center: [CF9212irfWLtr1.center]
    width: [CF9212irfWLtr1.width1,CF9212irfWLtr1.width2]
    scale: [CF9212irfWLtr1.scale1,CF9212irfWLtr1.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]
  CF9212irfWLtr2:
    type: spectral-multi-gaussian
    center: [CF9212irfWLtr2.center]
    width: [CF9212irfWLtr2.width1,CF9212irfWLtr2.width2]
    scale: [CF9212irfWLtr2.scale1,CF9212irfWLtr2.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]
  CF9212irfWLtr4:
    type: spectral-multi-gaussian
    center: [CF9212irfWLtr4.center]
    width: [CF9212irfWLtr4.width1,CF9212irfWLtr4.width2]
    scale: [CF9212irfWLtr4.scale1,CF9212irfWLtr4.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]

# weights:
#   - datasets: [CF9212WLtr1,CF9212WLtr2]
#     global_interval: [100, 1000]
#     value: 0.5
#   - datasets: [CF9212WLtr4]
#     global_interval: [100, 1000]
#     value: 0.2