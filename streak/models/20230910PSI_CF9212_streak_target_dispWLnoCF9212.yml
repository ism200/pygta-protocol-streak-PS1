default_megacomplex: decay
dataset_groups:
  streak:
    residual_function: non_negative_least_squares
    link_clp: True
  default:
    residual_function: variable_projection
    link_clp: True

dataset:
  WLtr1:
    group: streak
    megacomplex: [complexWL,freeChla]
    megacomplex_scale: [scalem.1,scalem.WLtr1a]
    initial_concentration: inputWL
    irf: irfWLtr1
    scale: scale.WLtr1
  WLtr2:
    group: streak
    megacomplex: [complexWL,freeChla]
    megacomplex_scale: [scalem.1,scalem.WLtr2a]
    initial_concentration: inputWL
    irf: irfWLtr2
    scale: scale.WLtr2
  WLtr4:
    group: streak
    megacomplex: [complexWL,freeChla]
    megacomplex_scale: [scalem.1,scalem.WLtr4a]
    initial_concentration: inputWL
    irf: irfWLtr4
    scale: scale.WLtr4
  WLRCSAS:
    group: streak
    megacomplex:
    - smc4
    scale: scale.WLRCSAS



megacomplex:
  freeChla:
    k_matrix: [kmChla]
  complexWL:
    # k_matrix: [skmBulkWL,skmWLRC,skmWLRCtrap]
    k_matrix: [skmBulkWL]
  smc4:
    dimension: time
    target: WLRC
    type: clp-guide
# note that earlier definition will override later definition
# xrates correction for different numbers of Bulk Chl a pigments in WL vs FRL (78 vs 70)
k_matrix:
  skmBulkWL:
    matrix:
      (Bulk, Red1): rates.ToBulkFromRed1
      (Red1, Bulk): rates.ToRed1FromBulk
      (Bulk, Red2): rates.ToBulkFromRed2
      (Red2, Bulk): rates.ToRed2FromBulk
      (Red1, Red1): rates.kF
      (Red2, Red2): rates.kF
  # skmWLRC:
  #   matrix:
      (WLRC, WLRP1): rates.ToWLRCFromWLRP1
      (WLRP1, WLRC): rates.ToWLRP1FromWLRC
      (Bulk, WLRC): rates.ToBulkFromWLRC
      (WLRC, Bulk): rates.ToWLRCFromBulk
  # skmWLRCtrap:
  #   matrix:
      (WLRP1, WLRP1): rates.WLRP1
      (Bulk, Bulk): rates.kF
  kmChla:
    matrix:
      (freeChla, freeChla): rates.kF

initial_concentration:
  inputWL:
    compartments: [Bulk,Red1,Red2,WLRC,WLRP1,freeChla]
    parameters: [input.Bulk,input.Red1, input.Red2, input.RC,input.0,input.1]
    exclude_from_normalize: [freeChla]

clp_penalties:
  - type: equal_area
    source: freeChla
    source_intervals: [[0, 1000]]
    target: Bulk
    target_intervals: [[0, 1000]]
    parameter: area.1
    weight: 0.62e-2
  - type: equal_area
    source: Red2
    source_intervals: [[0, 1000]]
    target: Bulk
    target_intervals: [[0, 1000]]
    parameter: area.Bulk
    weight: 0.62e-2
  - type: equal_area
    source: Red2
    source_intervals: [[0, 1000]]
    target: Red1
    target_intervals: [[0, 1000]]
    parameter: area.1
    weight: 0.62e-2
  - type: equal_area
    source: Red2
    source_intervals: [[0, 1000]]
    target: WLRC
    target_intervals: [[0, 1000]]
    parameter: area.1
    weight: 0.62e-2

# clp_relations:
#   - source: sWLRC
#     target: WLRC
#     parameter: rel.r1
#     interval: [[0, 1000]]
#   - source: sRed1
#     target: Red1
#     parameter: rel.r1
#     interval: [[0, 1000]]
#   - source: sRed2
#     target: Red2
#     parameter: rel.r1
#     interval: [[0, 1000]]

clp_constraints:
  # - type: zero
  #   target: Red2
  #   interval:
  #     - [100, 683]
  - type: zero
    target: WLRP1
    interval:
      - [100, 1000]
      #

# it is implicitly normalized, i.e. divided by sum of irfscale parameters
irf:
  irfWLtr1:
    type: spectral-multi-gaussian
    center: [irfWLtr1.center]
    width: [irfWLtr1.width1,irfWLtr1.width2]
    scale: [irfWLtr1.scale1,irfWLtr1.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]
  irfWLtr2:
    type: spectral-multi-gaussian
    center: [irfWLtr2.center]
    width: [irfWLtr2.width1,irfWLtr2.width2]
    scale: [irfWLtr2.scale1,irfWLtr2.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]
  irfWLtr4:
    type: spectral-multi-gaussian
    center: [irfWLtr4.center]
    width: [irfWLtr4.width1,irfWLtr4.width2]
    scale: [irfWLtr4.scale1,irfWLtr4.scale2]
    backsweep: True
    backsweep_period: irf.common_backsweep
    dispersion_center: irf.dispcenter
    center_dispersion_coefficients: [irf.disp1,irf.disp2]

weights:
  - datasets: [WLRCSAS]
    global_interval: [100, 1000]
    value: 0.1